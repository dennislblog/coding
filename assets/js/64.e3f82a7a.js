(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{1223:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[t._v("在这里记录计算机批处理小技巧 (win + L to locker the computer)")])]),t._v(" "),a("h2",{attrs:{id:"latex相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#latex相关"}},[t._v("#")]),t._v(" Latex相关")]),t._v(" "),a("div",{staticClass:"language-tex extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tex"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% 1. inline mode 数学公式超出边界, 做法就是在document加\\sloppy")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\sloppy")]),t._v("\n...\n"),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% 2. conditonal on 符号, 用bigg或者更大的Bigg, 然后rvert是丨, 如果是希望自动调整高度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\left")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\frac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("H("),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\hat")]),t._v(" S)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\right")]),a("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\rvert")]),t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("y=Y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% 3. 在align环境下如果想把label放在某一行, 得每行后面加\\nonumber")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"git相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git相关"}},[t._v("#")]),t._v(" Git相关")]),t._v(" "),a("p",[t._v("参考资料： "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000012002151",target:"_blank",rel:"noopener noreferrer"}},[t._v("subtree教程"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n⚛️ 创建远程分支\n🕉️ 以某一个文件夹为蓝本在当前目录下创建一个子分支child, squash表示不考虑过往commit\n✡️ 清除远程与本地不兼容的文件\n☸️ 突然告诉我Connection was reset in connection to github.com:443\n'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建远程分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" deploy https://github.com/dennislblog/infosys.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以某一个文件夹为蓝本在当前目录下创建一个子分支child, squash表示不考虑过往commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),t._v(" --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("other --squash --branch child\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除远程与本地不兼容的文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached to-delete-folder\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push remote "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 突然告诉我Connection was reset in connection to github.com:443")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从电脑-settings-proxy找到代理端口, 我现在的VPN是10809, 之后出国unset就好了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://127.0.0.1:10809\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.proxy http://127.0.0.1:10809\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset http.proxy\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset https.proxy\n")])])]),a("h2",{attrs:{id:"自动生成安装依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动生成安装依赖"}},[t._v("#")]),t._v(" 自动生成安装依赖")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 加"encoding"是考虑有汉字注释的原因')]),t._v("\npipreqs --encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf-8 ./\n")])])]),a("h2",{attrs:{id:"python对象占用内存大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python对象占用内存大小"}},[t._v("#")]),t._v(" Python对象占用内存大小")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Recursively finds size of objects"""')]),t._v("\n    size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getsizeof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" seen "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        seen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    obj_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" obj_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hasattr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__dict__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" get_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__dict__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hasattr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__iter__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytearray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("get_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" size\n\n"),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""返回比特字节\nget_size(instance)\n>> 3.037754 x 1e6 bytes\n"""')]),t._v("\n")])])]),a("h2",{attrs:{id:"子文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子文件夹"}},[t._v("#")]),t._v(" 子文件夹")]),t._v(" "),a("p",[t._v("Move all files from subdirectories to current directory")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" */*.ipynb "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将子文件夹内ipynb文件全部放到当前文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" -type d -empty -delete      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将内容为空的子文件夹删除")]),t._v("\n")])])]),a("h2",{attrs:{id:"批量转换jupyter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量转换jupyter"}},[t._v("#")]),t._v(" 批量转换Jupyter")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("workon imitate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" jupyter nbconvert --to html *.ipynb\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pip 换源 (Windows配置信息在pip.ini里)")]),t._v("\npip config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" global.index-url http://pypi.python.org/simple/\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# conda 换源 (.condarc文件)")]),t._v("\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --set show_channel_urls "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示包的来源")]),t._v("\nconda config --remove-key channels        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#清空源配置, 出国")]),t._v("\n")])])]),a("h2",{attrs:{id:"在错误出现之前调错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在错误出现之前调错"}},[t._v("#")]),t._v(" 在错误出现之前调错")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("python -m ipdb -c "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("continue")]),t._v(" *.py\n")])])]),a("h2",{attrs:{id:"python画图全局尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python画图全局尺寸"}},[t._v("#")]),t._v(" Python画图全局尺寸")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" matplotlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pyplot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" plt\nplt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rcParams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'figure.figsize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h2",{attrs:{id:"python改变小数精度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python改变小数精度"}},[t._v("#")]),t._v(" Python改变小数精度")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_printoptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("precision "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者直接 %precision 4")]),t._v("\n")])])]),a("h2",{attrs:{id:"python处理遍历失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python处理遍历失败"}},[t._v("#")]),t._v(" Python处理遍历失败")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""在for循环完整完成后才执行else, 如果中途跳出循环, 则一并跳过else语句\n"""')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" threshold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all below threshold"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"jupyter自动补全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jupyter自动补全"}},[t._v("#")]),t._v(" Jupyter自动补全")]),t._v(" "),a("p",[t._v("Jupyter lab中的TAB键失去作用, "),a("a",{attrs:{href:"https://stackoverflow.com/questions/44186370/kernel-taking-too-long-to-autocomplete-tab-in-jupyter-notebook",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考这里"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入ipython_config.py")]),t._v("\nc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Completer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("use_jedi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),a("h2",{attrs:{id:"jupyter-plotly一片空白"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jupyter-plotly一片空白"}},[t._v("#")]),t._v(" Jupyter-Plotly一片空白")]),t._v(" "),a("p",[t._v("折腾半天，发现Windows上安装还是傻逼安装最"),a("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 nodejs")]),t._v("\nconda "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -c conda-forge nodejs  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装jupyer lab plotly")]),t._v("\njupyter lab clean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" jupyter lab build\n")])])]),a("p",[t._v("但是他给我报错, 好像是"),a("a",{attrs:{href:"https://github.com/jupyterlab/jupyterlab/issues/9533",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack"),a("OutboundLink")],1),t._v("的问题, 于是更新jupyterlab到"),a("code",[t._v("3.0.6")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n先更新 jupyter lab\npip install --upgrade jupyterlab\njupyter labextension install jupyterlab-plotly\n"""')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" plotly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("express "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" px\nfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sample figure"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"ipython指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipython指令"}},[t._v("#")]),t._v(" IPython指令")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("precision "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sets printed precision for floats to 4 decimal places")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("whos               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gives a list of variables and their values")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("quickref           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gives a list of magics")]),t._v("\n")])])]),a("h2",{attrs:{id:"npm安装错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm安装错误"}},[t._v("#")]),t._v(" NPM安装错误")]),t._v(" "),a("p",[t._v("直接"),a("code",[t._v("npm install --ignore-scripts")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\ngyp ERR! stack     import sys; print "%s.%s.%s" % sys.version_info[:3];\n"""')]),t._v("\n")])])]),a("h2",{attrs:{id:"更新环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新环境变量"}},[t._v("#")]),t._v(" 更新环境变量")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭后再打开 echo %PATH% 可以看见更新的路径")]),t._v("\n")])])]),a("h2",{attrs:{id:"关闭占用端口程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭占用端口程序"}},[t._v("#")]),t._v(" 关闭占用端口程序")]),t._v(" "),a("p",[t._v("这里示范怎么把占用端口"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[t._v("8891")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("8891")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),a("span",{staticClass:"mord"},[t._v("8")]),a("span",{staticClass:"mord"},[t._v("8")]),a("span",{staticClass:"mord"},[t._v("9")]),a("span",{staticClass:"mord"},[t._v("1")])])])]),t._v("的程序后台强行关闭")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -ano "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" findstr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8891")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -nltp                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用端口找程序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TCP    127.0.0.1:8891         0.0.0.0:0              LISTENING       40128")]),t._v("\ntaskkill /F /PID "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40128")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Windows系统")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -s "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40128")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Linux系统, -s指定信号为9(意思是强行关闭), 如果不加则不一定关得了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SUCCESS: The process with PID 40128 has been terminated.")]),t._v("\n")])])]),a("h2",{attrs:{id:"centos-yum卡在某一个包没有正常安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos-yum卡在某一个包没有正常安装"}},[t._v("#")]),t._v(" CentOS Yum卡在某一个包没有正常安装")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n先安装yum-utils, 然后把这个包卸了\n'")]),t._v("\nyum --disablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("google-cloud-monitoring -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" yum-utils\nyum-config-manager --disable google-cloud-monitoring\n")])])]),a("h2",{attrs:{id:"连接vps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接vps"}},[t._v("#")]),t._v(" 连接VPS")]),t._v(" "),a("p",[t._v("👨‍🎓管理员身份密码登录;")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -i                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到root角色")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/ssh/sshd_config     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改PermitRootLogin和PasswordAuthentication为yes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v(" root                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给root设置密码")]),t._v("\nsystemctl restart sshd      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# centos 7里系统命令")]),t._v("\n")])])]),a("p",[t._v("👶普通用户密钥登录")]),t._v(" "),a("ul",[a("li",[t._v("将私钥"),a("code",[t._v(".ppk")]),t._v("对应的公钥粘贴到GCP的"),a("code",[t._v("Compute Engine -> Metadata -> SSH Keys")]),t._v("里就可以用私钥配合用户名登录了(注意私钥的用户名就是登录的用户名)\n👨‍🦳可以考虑装个宝塔面板管理, 方便查看文件和系统信息")])]),t._v(" "),a("div",{staticClass:"language-bahs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh\n")])])]),a("h2",{attrs:{id:"安装jupyter-lab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装jupyter-lab"}},[t._v("#")]),t._v(" 安装Jupyter Lab")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("ul",[a("li",[t._v("安装"),a("code",[t._v("wget")]),t._v(","),a("code",[t._v("bzip2")]),t._v("等小工具")]),t._v(" "),a("li",[t._v("根据系统是32位还是64位去"),a("code",[t._v("https://repo.anaconda.com/archive/")]),t._v("下载最新的安装包")]),t._v(" "),a("li",[t._v("更改用户权限, 然后安装")]),t._v(" "),a("li",[t._v("新建一个环境, 然后配置Jupyter Lab, 并且把防火墙对应的端口打开")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装wget, 另外把比较新的源都加到yum里")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://rpm.nodesource.com/setup_15.x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" -  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bzip2")]),t._v(" nodejs gcc-c++ \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看系统内核")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -a \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nLinux instance-1 3.10.0-1160.21.1.el7.x86_64 #1 SMP Tue Mar 16 18:28:22 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n也可以通过 cat /etc/redhat-release 和 file /bin/ls 查看\n'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x Anaconda3-5.3.1-Linux-x86_64.sh\n./Anaconda3-5.3.1-Linux-x86_64.sh\nconda update conda"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" conda update all\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.bashrc\nconda create -n env_name "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("python")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),t._v(" anaconda "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# conda info -e 列出所有安装环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" activate env_name                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出环境 source deactivate")]),t._v("\njupyter lab --generate-config\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.jupyter/jupyter_notebook_config.py\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n更改如下\nc.NotebookApp.token = '")]),t._v("'\nc.NotebookApp.allow_root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" True\nc.NotebookApp.open_browser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" False\nc.NotebookApp.notebook_dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'notebook'")]),t._v("\nc.NotebookApp.ip "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\nc.NotebookApp.port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8890")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nfirewall-cmd --zone=public --remove-port=8890/tcp --permanent  # 好像得去VPC-firewall-rule设置才可以, 并且确定实例是静态IP(花钱)\nact thesis && jlab\n:'")]),t._v("\n最后浏览器访问 http://34.92.236.104:8890 便可, 另附上我的快捷键设置\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nalias jlab='")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" jupyter-lab "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" logs/jupyter.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nalias act='")]),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" activate "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nalias grep='")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nalias jconfig='")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.jupyter/jupyter_notebook_config.py'\n")])])])]),t._v(" "),a("h2",{attrs:{id:"在centos中如何把node-js从v6升级到v15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在centos中如何把node-js从v6升级到v15"}},[t._v("#")]),t._v(" 在CentOS中如何把Node.js从V6升级到V15")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node -v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# v6.17.1; 3.10.10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://rpm.nodesource.com/setup_15.x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" -  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加源")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -la /etc/yum.repos.d/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nodesource                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确定新源被添加")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum list available nodejs                                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以安装V15了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nodejs\n")])])]),a("h2",{attrs:{id:"conda不小心崩了-怎么撤销傻逼操作-怎么创建虚拟环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conda不小心崩了-怎么撤销傻逼操作-怎么创建虚拟环境"}},[t._v("#")]),t._v(" "),a("s",[t._v("Conda不小心崩了, 怎么撤销傻逼操作,")]),t._v(" 怎么创建虚拟环境")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[a("code",[t._v("mkvirtualenv -p python3 thesis")]),t._v("创建虚拟环境")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ mkvirtualenv "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-a project_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-i package"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-r requirements_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("virtualenv options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ENVNAME  \n$ allvirtualenv pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -U pip\n$ rmvirtualenv ENVNAME\n")])])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("conda list --revision      \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n2021-04-04 20:30:21  (rev 1)\n     ca-certificates  {2018.03.07 -> 2021.1.19}\n     intel-openmp  {2019.0 -> 2020.2}\n\n2021-04-04 20:34:11  (rev 2)\n     certifi  {2018.8.24 -> 2020.12.5}\n     chardet  {3.0.4 -> 4.0.0}\n'")]),t._v("\nconda config --set allow_conda_downgrades "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nconda "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --revision "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复安装到(rev 1)节点")]),t._v("\nconda clean --all           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除所有可能带有不正确安装的信息")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n事实证明conda和pip还是不要混着用, 还是直接用virtualenv管理比较好\n'")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" virtualenv "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" virtualenvwrapper\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n把下面两句加到用户启动里, 这样就可以用workon/mkvirtualenv等命令\n'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WORKON_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.virtualenvs\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/anaconda3/bin/virtualenvwrapper.sh\n")])])]),a("h2",{attrs:{id:"wrds和gcp之间传递文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wrds和gcp之间传递文件"}},[t._v("#")]),t._v(" WRDS和GCP之间传递文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nparamiko有窗口大小的问题, 采用rsync方法(速度不要太快)\n在此之前, 我还把所有CSV文件单独转换成了ZIP\n#!/usr/bin/env python3\nimport sys\nfrom pathlib import Path\nfrom zipfile import ZipFile\n\nsrc_dir, dest_dir = map(Path, sys.argv[1:])\nfor filename in src_dir.glob('")]),t._v("*.csv"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'): # enumerate all csv-files in the src folder\n    # zip each file individually\n    with ZipFile(str(dest_dir / (filename.stem + '")]),t._v(".zip"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')), '")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("') as archive:\n        archive.write(str(filename), arcname=filename.name)\n'")]),t._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" -y\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" -zrP dennislx@wrds-cloud.wharton.upenn.edu:/scratch/udel/dennislx/data.zip ~/notebook/wrds/data.zip\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);