(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{1235:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",[t._v("在这里记录数据获取和处理")])]),t._v(" "),n("h2",{attrs:{id:"数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),n("p",[n("img",{attrs:{src:s(657)+"#center",alt:"总体架构"}})]),t._v(" "),n("h3",{attrs:{id:"启动服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动服务器"}},[t._v("#")]),t._v(" 启动服务器")]),t._v(" "),n("p",[t._v("Python应用通过会话（Session）在DolphinDB服务器上执行脚本和函数以及在两者之间双向传递数据。常用的Session类的函数如下：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{attrs:{align:"left"}},[t._v("方法名")]),t._v(" "),n("th",{attrs:{align:"left"}},[t._v("详情")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{attrs:{align:"left"}},[t._v("connect(host,port,[username,password])")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("将会话连接到DolphinDB服务器")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("login(username,password,[enableEncryption])")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("登录服务器")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("run(DolphinDBScript)")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("将脚本在DolphinDB服务器运行")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("run(DolphinDBFunctionName,args)")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("调用DolphinDB服务器上的函数")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("upload(DictionaryOfPythonObjects)")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("将本地数据对象上传到DolphinDB服务器")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("undef(objName,objType)")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("取消指定对象在DolphinDB内存中定义以释放内存")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("undefAll()")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("取消所有对象在DolphinDB内存中的定义以释放内存")])]),t._v(" "),n("tr",[n("td",{attrs:{align:"left"}},[t._v("close()")]),t._v(" "),n("td",{attrs:{align:"left"}},[t._v("关闭当前会话")])])])]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("dolphindb.cfg")]),t._v("中可以修改默认端口号(暂时是8900), 如果需要指定其它端口，可以执行")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("start server/dolphindb.exe -localSite localhost:post:name\n")])])]),n("p",[t._v("对"),n("code",[t._v("https")]),t._v("进行通讯加密")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("s=ddb.session(enableSSL=True)\n")])])]),n("h3",{attrs:{id:"导入数据到服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入数据到服务器"}},[t._v("#")]),t._v(" 导入数据到服务器")]),t._v(" "),n("p",[t._v("✊\n用"),n("code",[t._v("loadText")]),t._v("方法把文本文件导入到DolphinDB的"),n("strong",[t._v("内存表")]),t._v("中，注意"),n("code",[t._v("DATA_DIR")]),t._v("必须是完整路径, 而且注意"),n("code",[t._v("windows")]),t._v("操作系统下奇怪的路径。 默认分割符是逗号")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("DATA_DIR "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'C://Users//denni//...//_dolphindb_//data'")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DATA_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//example.csv'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delimiter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("🤜\n如果数据太大，超过内存读取要求，可以创建分区数据表(可以是DFS也可以是内存表), 由于一旦创建了数据库，就不能更改他的"),n("code",[t._v("partition scheme")]),t._v("，因此得先确定这个数据库是否已经存在于服务器了")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("existsDatabase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dropDatabase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"custom-block right"},[n("p",[t._v("若是值分区或范围分区 (value/range)，可以通过addValuePartitions和addRangePartitions来添加分区")])]),t._v(" "),n("p",[t._v("👌\n这里我们简单地使用股票名称分割, 还可以使用范围/列表/组合分区，详细看"),n("a",{attrs:{href:"https://www.dolphindb.cn/cn/help/database1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 硬盘存取 ")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'db'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitionType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ddb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AMZN"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NFLX"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NVDA"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 distributed file system")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'db'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitionType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ddb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AMZN"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NFLX"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NVDA"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dfs://valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("👉\n创建数据库后，按照"),n("code",[t._v("partition scheme")]),t._v("载入数据(用"),n("code",[t._v("loadTextEx")]),t._v("函数), 如果分割表不存在就创建一个，如果存在就"),n("code",[t._v("append")])]),t._v(" "),n("ul",[n("li",[t._v("loadText方法把文本文件导入到DolphinDB的内存表中")]),t._v(" "),n("li",[t._v("ploadText方法可以并行加载文本文件到内存分区表中，比loadText要快")]),t._v(" "),n("li",[t._v("loadTextEx把数据导入到分区内存表中(有"),n("code",[t._v("partition")]),t._v("的)")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("filePath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORK_DIR "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example.csv"')]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTextEx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"db"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tableName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'trade'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitionColumns"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TICKER"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remoteFilePath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ploadText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"从服务器加载数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从服务器加载数据"}},[t._v("#")]),t._v(" 从服务器加载数据")]),t._v(" "),n("p",[t._v("调用"),n("code",[t._v("loadTable(tableName, dbPath)")]),t._v("读取和查看服务器端的表格，如果没有指定"),n("code",[t._v("dbPath")]),t._v("会试图从内存中加载表格。 下图是分区表中一个特定分区"),n("code",[t._v("AMZN")]),t._v("的结构(每一个都是一张内存表)。 数据以列的形式被存储起来")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("├───AMZN\n│   │   trade.tbl\n│   │\n│   └───trade\n│           ASK.col\n│           BID.col\n│           date.col\n│           PRC.col\n│           TICKER.col\n│           VOL.col\n")])])]),n("p",[n("code",[t._v("loadTable")]),t._v("可以让我们只读取分区的数据")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. pload 比 loadtext 要更快")]),t._v("\ntrade"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ploadText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example.csv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 可以按照分割标准只加载一部分")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trade"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AMZN"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 还可以用SQL语句加载")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTableBySQL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trade"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sql"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select * from trade where date>2010.01.01"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("Dolphindb -> Python 数据转换")]),t._v(" "),n("p",[n("img",{attrs:{src:s(658)+"#center",alt:"数据转换"}})]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("此外还有几种数据结构的映射")])])]),t._v(" "),n("p",[n("img",{attrs:{src:s(659)+"#center",alt:"数据结构"}})])]),t._v(" "),n("h3",{attrs:{id:"上传服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#上传服务器"}},[t._v("#")]),t._v(" 上传服务器")]),t._v(" "),n("p",[t._v("1️⃣\n使用"),n("code",[t._v("session.upload")]),t._v("可以上传一个Python的字典对象，它的key对应的是DolphinDB中的变量名，value对应的是Python对象，可为Numbers，Strings，Lists，DataFrame等数据对象。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("df "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DataFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" np"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("int32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  np"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("double"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" np"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("int32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upload"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" df"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typestr(t1)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("2️⃣\n也可以直接创建"),n("code",[t._v("DolphinDB table object")]),t._v(", 这里"),n("code",[t._v("executeAs")]),t._v("可以给表重命名(也可以用"),n("code",[t._v("tableAliasName='test'")]),t._v("作为参数传入"),n("code",[t._v("session.table")]),t._v(")")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("为什么要重命名")]),t._v(" "),n("p",[t._v("Python端通过session.table函数将数据上传到server之后，DolphinDB会建立一个Python端变量对server端table变量的引用。 但是在给Python端"),n("code",[t._v("dt")]),t._v("分配服务器的"),n("code",[t._v("test")]),t._v("表之前，要确保"),n("code",[t._v("test")]),t._v("表没有引用其他Python本地对象, 否则要么释放"),n("code",[t._v("test")]),t._v(", 要么创建另外一个服务器表。")]),t._v(" "),n("p",[t._v("最合理的做法是在创建"),n("code",[t._v("session.table")]),t._v("的时候不指明表的名称, 这样会为用户随机产生一个临时表名(通过"),n("code",[t._v("t.tableName()")]),t._v("获取)。 但这样会不会导致服务器端产生大量无用表，造成内存溢出呢？ 只要我们在本地Python端用的是同一个变量名，当更新引用的时候，之前引用这个对象的表自动被释放。")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# table(capacity:size, colNames, colTypes)")]),t._v("\ndt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ticker'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AAPL'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AMZN'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AMZN'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'price'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executeAs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" dt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("3️⃣\n然后我们可以对"),n("code",[t._v("dolphindb.table.Table")]),t._v("对象进行操作, 包括append, update, where, delete, drop等")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executeAs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"top2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ticker=`AMZN && BID==ASK && date>=2010.01.01'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toDataFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tableInsert{}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n  TICKER       date  ...        BID        ASK\n0   AMZN 2010-04-29  ...  141.78999  141.78999\n1   AMZN 2010-11-08  ...  172.07001  172.07001\n"""')]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VOL"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"999999"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TICKER=`AMZN"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date<2013.01.01'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntarde"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("trade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ask'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bid'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("会话")]),t._v(" "),n("ul",[n("li",[t._v("nullValueToZero:")]),t._v(" "),n("li",[t._v("nullValueToNan:")]),t._v(" "),n("li",[t._v("subscribe/unsubscribe")]),t._v(" "),n("li",[t._v("getInitScript/setInitScript")]),t._v(" "),n("li",[t._v("saveTable/loadTable/loadTableBySQL/loadTextEx")]),t._v(" "),n("li",[t._v("loadText/ploadText")]),t._v(" "),n("li",[t._v("convertDatetime64")]),t._v(" "),n("li",[t._v("existsDatabase/dropDatabase")]),t._v(" "),n("li",[t._v("dropPartition")]),t._v(" "),n("li",[t._v("existsTable/dropTable")]),t._v(" "),n("li",[t._v("undef/undefAll")]),t._v(" "),n("li",[t._v("clearAllCache")]),t._v(" "),n("li",[t._v("table")])])]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("数据库")]),t._v(" "),n("ul",[n("li",[t._v("createTable")]),t._v(" "),n("li",[t._v("createPartitionedTable")])])]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("数据表")]),t._v(" "),n("ul",[n("li",[t._v("select(cols)")]),t._v(" "),n("li",[t._v("where(conds)")]),t._v(" "),n("li",[t._v("groupby/contextby/pivotby(cols): 下例展示了group by和context by的"),n("a",{attrs:{href:"http://www.dolphindb.cn/cn/help/index.html?getAllDBs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("不同之处"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("top/sort/rows/cols/schema")]),t._v(" "),n("li",[t._v("execute(expr)")]),t._v(" "),n("li",[t._v("merge/merge_asof/merge_window/merge_cross")]),t._v(" "),n("li",[t._v("showSQL: 翻译成SQL "),n("br"),n("code",[t._v("select {top} {select} from {table} {where} {groupby} {having} {orderby}")])]),t._v(" "),n("li",[t._v("append(table)/update(cols,vals)/delete/drop(cols)")]),t._v(" "),n("li",[t._v("rename(name)/executeAs(name)")]),t._v(" "),n("li",[t._v("ols(Y,X,intercept=True)")]),t._v(" "),n("li",[t._v("toDF")])])]),t._v(" "),n("h2",{attrs:{id:"应用情境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#应用情境"}},[t._v("#")]),t._v(" 应用情境")]),t._v(" "),n("h3",{attrs:{id:"获取数据库中的所有表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取数据库中的所有表"}},[t._v("#")]),t._v(" 获取数据库中的所有表")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("db "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mydb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DATA_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//thesisdb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getTables(mydb)'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'trade'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h3",{attrs:{id:"数据表的输入和输出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据表的输入和输出"}},[t._v("#")]),t._v(" 数据表的输入和输出")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("trade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("createDemoDF"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tableAliasName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tradeData"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("saveTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tbl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("trade"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DATA_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//testdb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tradeData'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partitions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memoryMode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# database, loadTable 和 loadTableBySQL 三步操作")]),t._v("\ntrade "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadTableBySQL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trade"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dbPath"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORK_DIR"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/valuedb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\tsql"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select * from trade where date>2010.01.01"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),n("div",{staticClass:"custom-block right"},[n("p",[t._v("注意这里的"),n("code",[t._v("dbPath")]),t._v("必须是没有被分配的地址, 因为要创建一个非分区数据库。 "),n("br"),t._v("\n另外也可以用"),n("code",[t._v("loadTableBySQL")]),t._v("更灵活, 但那样返回的只能是内存分区表, 而且比较费时")])]),t._v(" "),n("h2",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/dolphindb/api_python3/tree/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python API for DolphinDB @dolphindb"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports},657:function(t,a,s){t.exports=s.p+"assets/img/dolphin-03.0310e918.png"},658:function(t,a,s){t.exports=s.p+"assets/img/dolphin-01.a3726427.png"},659:function(t,a,s){t.exports=s.p+"assets/img/dolphin-02.c33f25e7.png"}}]);